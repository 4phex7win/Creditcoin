// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DealOrder.proto

#include "DealOrder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class DealOrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DealOrder>
      _instance;
} _DealOrder_default_instance_;
namespace protobuf_DealOrder_2eproto {
void InitDefaultsDealOrderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DealOrder_default_instance_;
    new (ptr) ::DealOrder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DealOrder::InitAsDefaultInstance();
}

void InitDefaultsDealOrder() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDealOrderImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DealOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DealOrder, ask_order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DealOrder, bid_order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DealOrder, collateral_transfer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DealOrder, unlock_funds_destination_address_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DealOrder, unlock_collateral_destination_address_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DealOrder)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DealOrder_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DealOrder.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017DealOrder.proto\"\266\001\n\tDealOrder\022\024\n\014ask_o"
      "rder_id\030\001 \001(\t\022\024\n\014bid_order_id\030\002 \001(\t\022\036\n\026c"
      "ollateral_transfer_id\030\003 \001(\t\022+\n#unlock_fu"
      "nds_destination_address_id\030\004 \001(\t\0220\n(unlo"
      "ck_collateral_destination_address_id\030\005 \001"
      "(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 210);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DealOrder.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_DealOrder_2eproto

// ===================================================================

void DealOrder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealOrder::kAskOrderIdFieldNumber;
const int DealOrder::kBidOrderIdFieldNumber;
const int DealOrder::kCollateralTransferIdFieldNumber;
const int DealOrder::kUnlockFundsDestinationAddressIdFieldNumber;
const int DealOrder::kUnlockCollateralDestinationAddressIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealOrder::DealOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_DealOrder_2eproto::InitDefaultsDealOrder();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DealOrder)
}
DealOrder::DealOrder(const DealOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ask_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ask_order_id().size() > 0) {
    ask_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ask_order_id_);
  }
  bid_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bid_order_id().size() > 0) {
    bid_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_order_id_);
  }
  collateral_transfer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collateral_transfer_id().size() > 0) {
    collateral_transfer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collateral_transfer_id_);
  }
  unlock_funds_destination_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unlock_funds_destination_address_id().size() > 0) {
    unlock_funds_destination_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_funds_destination_address_id_);
  }
  unlock_collateral_destination_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unlock_collateral_destination_address_id().size() > 0) {
    unlock_collateral_destination_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_collateral_destination_address_id_);
  }
  // @@protoc_insertion_point(copy_constructor:DealOrder)
}

void DealOrder::SharedCtor() {
  ask_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collateral_transfer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlock_funds_destination_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlock_collateral_destination_address_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DealOrder::~DealOrder() {
  // @@protoc_insertion_point(destructor:DealOrder)
  SharedDtor();
}

void DealOrder::SharedDtor() {
  ask_order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collateral_transfer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlock_funds_destination_address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlock_collateral_destination_address_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DealOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealOrder::descriptor() {
  ::protobuf_DealOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DealOrder_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DealOrder& DealOrder::default_instance() {
  ::protobuf_DealOrder_2eproto::InitDefaultsDealOrder();
  return *internal_default_instance();
}

DealOrder* DealOrder::New(::google::protobuf::Arena* arena) const {
  DealOrder* n = new DealOrder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:DealOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ask_order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bid_order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collateral_transfer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlock_funds_destination_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unlock_collateral_destination_address_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DealOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DealOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ask_order_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ask_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ask_order_id().data(), static_cast<int>(this->ask_order_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DealOrder.ask_order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bid_order_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bid_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bid_order_id().data(), static_cast<int>(this->bid_order_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DealOrder.bid_order_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string collateral_transfer_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collateral_transfer_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collateral_transfer_id().data(), static_cast<int>(this->collateral_transfer_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DealOrder.collateral_transfer_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unlock_funds_destination_address_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlock_funds_destination_address_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unlock_funds_destination_address_id().data(), static_cast<int>(this->unlock_funds_destination_address_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DealOrder.unlock_funds_destination_address_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unlock_collateral_destination_address_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlock_collateral_destination_address_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unlock_collateral_destination_address_id().data(), static_cast<int>(this->unlock_collateral_destination_address_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DealOrder.unlock_collateral_destination_address_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DealOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DealOrder)
  return false;
#undef DO_
}

void DealOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DealOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ask_order_id = 1;
  if (this->ask_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ask_order_id().data(), static_cast<int>(this->ask_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.ask_order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ask_order_id(), output);
  }

  // string bid_order_id = 2;
  if (this->bid_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bid_order_id().data(), static_cast<int>(this->bid_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.bid_order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bid_order_id(), output);
  }

  // string collateral_transfer_id = 3;
  if (this->collateral_transfer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collateral_transfer_id().data(), static_cast<int>(this->collateral_transfer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.collateral_transfer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->collateral_transfer_id(), output);
  }

  // string unlock_funds_destination_address_id = 4;
  if (this->unlock_funds_destination_address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlock_funds_destination_address_id().data(), static_cast<int>(this->unlock_funds_destination_address_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.unlock_funds_destination_address_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->unlock_funds_destination_address_id(), output);
  }

  // string unlock_collateral_destination_address_id = 5;
  if (this->unlock_collateral_destination_address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlock_collateral_destination_address_id().data(), static_cast<int>(this->unlock_collateral_destination_address_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.unlock_collateral_destination_address_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->unlock_collateral_destination_address_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DealOrder)
}

::google::protobuf::uint8* DealOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DealOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ask_order_id = 1;
  if (this->ask_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ask_order_id().data(), static_cast<int>(this->ask_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.ask_order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ask_order_id(), target);
  }

  // string bid_order_id = 2;
  if (this->bid_order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bid_order_id().data(), static_cast<int>(this->bid_order_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.bid_order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bid_order_id(), target);
  }

  // string collateral_transfer_id = 3;
  if (this->collateral_transfer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collateral_transfer_id().data(), static_cast<int>(this->collateral_transfer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.collateral_transfer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->collateral_transfer_id(), target);
  }

  // string unlock_funds_destination_address_id = 4;
  if (this->unlock_funds_destination_address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlock_funds_destination_address_id().data(), static_cast<int>(this->unlock_funds_destination_address_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.unlock_funds_destination_address_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->unlock_funds_destination_address_id(), target);
  }

  // string unlock_collateral_destination_address_id = 5;
  if (this->unlock_collateral_destination_address_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unlock_collateral_destination_address_id().data(), static_cast<int>(this->unlock_collateral_destination_address_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DealOrder.unlock_collateral_destination_address_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->unlock_collateral_destination_address_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DealOrder)
  return target;
}

size_t DealOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DealOrder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ask_order_id = 1;
  if (this->ask_order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ask_order_id());
  }

  // string bid_order_id = 2;
  if (this->bid_order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bid_order_id());
  }

  // string collateral_transfer_id = 3;
  if (this->collateral_transfer_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collateral_transfer_id());
  }

  // string unlock_funds_destination_address_id = 4;
  if (this->unlock_funds_destination_address_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unlock_funds_destination_address_id());
  }

  // string unlock_collateral_destination_address_id = 5;
  if (this->unlock_collateral_destination_address_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unlock_collateral_destination_address_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DealOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const DealOrder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DealOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DealOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DealOrder)
    MergeFrom(*source);
  }
}

void DealOrder::MergeFrom(const DealOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DealOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ask_order_id().size() > 0) {

    ask_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ask_order_id_);
  }
  if (from.bid_order_id().size() > 0) {

    bid_order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_order_id_);
  }
  if (from.collateral_transfer_id().size() > 0) {

    collateral_transfer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collateral_transfer_id_);
  }
  if (from.unlock_funds_destination_address_id().size() > 0) {

    unlock_funds_destination_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_funds_destination_address_id_);
  }
  if (from.unlock_collateral_destination_address_id().size() > 0) {

    unlock_collateral_destination_address_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_collateral_destination_address_id_);
  }
}

void DealOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DealOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealOrder::CopyFrom(const DealOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DealOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealOrder::IsInitialized() const {
  return true;
}

void DealOrder::Swap(DealOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealOrder::InternalSwap(DealOrder* other) {
  using std::swap;
  ask_order_id_.Swap(&other->ask_order_id_);
  bid_order_id_.Swap(&other->bid_order_id_);
  collateral_transfer_id_.Swap(&other->collateral_transfer_id_);
  unlock_funds_destination_address_id_.Swap(&other->unlock_funds_destination_address_id_);
  unlock_collateral_destination_address_id_.Swap(&other->unlock_collateral_destination_address_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealOrder::GetMetadata() const {
  protobuf_DealOrder_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DealOrder_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
